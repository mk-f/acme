#!/usr/bin/env rc
fn msg{
	echo $* | 9p write acme/cons
}
fn read_shebang{
	echo -n 0,1 | 9p write acme/$1/addr
	9p read acme/$1/xdata
}
fn detect_python{
	id=$1
	file=$2

	if(~ `{basename $file} *.py)
		msg $id^': python-file detected (by file-extension)'
	if not if(~ `{read_shebang $id} '#'!/*python*)
		msg $id^': python-file detected (by shebang)'
	if not
		status=nopython
}
fn detect_markdown{
	id=$1
	file=$2

	if(~ `{basename $file} *.md)
		msg $id^': markdown detected (by file-extension)'
	if not
		status=nomd
}
fn indent_spaces{
	if (echo spacesindent | 9p write acme/$1/ctl) {
		echo -n Spaces on | 9p write acme/$1/tag
		msg $id^': set ''Spaces on'''
	}
	if not
		msg $id^': Spaces-Patch missing'
}
fn set_tabstop{
	if (echo 'tabstop '^$2 | 9p write acme/$1/ctl) {
		msg $id^': set ''tabstop'' '^$2
	}
	if not
		msg $id^': set ''tabstop'' failed'
}
fn update_tag{
	printf '\n%s\n%s' 'win |a+ |a-' 'Edit' | 9p write acme/$1/tag
}
fn update_menu{
	printf '%s\n' \
		Put Get Zerox 'Edit =' '' Win '|a+' '|a-' '' 'Edit ,d' '' 'rwmenu'
}
fn detect_filetype{
	id=$1
	file=$2

	ctl=`{9p read acme/$id/ctl}

	if (~ $ctl(4) 0) {	# 0: file, 1: dir
		if (detect_python $id $file)
			indent_spaces $id
		if (detect_markdown $id $file) {
			indent_spaces $id
			set_tabstop $id 2
		}
	}
	update_menu $id | 9p write acme/$1/wrmenu
}

echo wait for acme
while(! 9p ls acme >/dev/null >[2=1]) {
	sleep 1
}
# read already open (dump, per cli arg)
9p read acme/index | while (line=`{read}){
	detect_filetype $line(1) $line(6)
}
# now read events
while () {
	9p read acme/log | while (line=`{read}){
		id=$line(1)
		action=$line(2)
		file=$line(3)

		switch($action) {
		case new
			detect_filetype $id $file
		}
	}
	sleep 1
}
